{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mani5\\\\OneDrive\\\\Desktop\\\\WebSecScan\\\\Frontend_contri\\\\src\\\\components\\\\Scanner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport ScanResults from './ScanResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scanOptions = [{\n  id: 'basic',\n  name: 'Basic Scan',\n  description: 'Gather general information about the website',\n  endpoint: '/basicscan'\n}, {\n  id: 'sql',\n  name: 'SQL Injection Scan',\n  description: 'Check for SQL injection vulnerabilities',\n  endpoint: '/sqlscan'\n}, {\n  id: 'password',\n  name: 'Weak Password Check',\n  description: 'Test for common weak passwords',\n  endpoint: '/password'\n}, {\n  id: 'stress',\n  name: 'Website Stress Test',\n  description: 'Test website resilience under load',\n  endpoint: '/webstresser'\n}, {\n  id: 'xss',\n  name: 'XSS Vulnerability Check',\n  description: 'Check for Cross-Site Scripting vulnerabilities',\n  endpoint: '/xss'\n}, {\n  id: 'deface',\n  name: 'Deface Vulnerability Check',\n  description: 'Check for potential defacement vulnerabilities',\n  endpoint: '/deface'\n}, {\n  id: 'dns',\n  name: 'DNS Records Check',\n  description: 'Analyze DNS records and configurations',\n  endpoint: '/dnsrecord'\n}, {\n  id: 'full',\n  name: 'Full Comprehensive Scan',\n  description: 'Run all security checks',\n  endpoint: '/scanner/fullscan'\n}];\nconst Scanner = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [selectedScans, setSelectedScans] = useState([]);\n  const [results, setResults] = useState({});\n  const scanMutation = useMutation({\n    mutationFn: async ({\n      url,\n      endpoint\n    }) => {\n      const response = await axios.post(`http://localhost:10037${endpoint}`, {\n        website: url\n      });\n      return response.data;\n    },\n    onSuccess: (data, variables) => {\n      setResults(prev => ({\n        ...prev,\n        [variables.endpoint]: data\n      }));\n      toast.success('Scan completed successfully!');\n    },\n    onError: error => {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Scan failed');\n    }\n  });\n  const handleScan = async () => {\n    if (!url) {\n      toast.error('Please enter a URL');\n      return;\n    }\n    if (selectedScans.length === 0) {\n      toast.error('Please select at least one scan type');\n      return;\n    }\n    setResults({});\n    selectedScans.forEach(scanId => {\n      const scan = scanOptions.find(s => s.id === scanId);\n      if (scan) {\n        scanMutation.mutate({\n          url,\n          endpoint: scan.endpoint\n        });\n      }\n    });\n  };\n  const toggleScan = scanId => {\n    setSelectedScans(prev => prev.includes(scanId) ? prev.filter(id => id !== scanId) : [...prev, scanId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900 dark:text-white mb-4\",\n        children: \"Website Security Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"url\",\n            className: \"block text-sm font-medium text-gray-700 dark:text-gray-300\",\n            children: \"Website URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            id: \"url\",\n            value: url,\n            onChange: e => setUrl(e.target.value),\n            placeholder: \"https://example.com\",\n            className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: scanOptions.map(scan => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 rounded-lg border cursor-pointer transition-colors ${selectedScans.includes(scan.id) ? 'border-primary-500 bg-primary-50 dark:bg-primary-900/20' : 'border-gray-200 dark:border-gray-700 hover:border-primary-300 dark:hover:border-primary-700'}`,\n            onClick: () => toggleScan(scan.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-gray-900 dark:text-white\",\n              children: scan.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 dark:text-gray-400\",\n              children: scan.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, scan.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScan,\n          disabled: scanMutation.isPending,\n          className: \"w-full bg-primary-600 text-white py-2 px-4 rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: scanMutation.isPending ? 'Scanning...' : 'Start Scan'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), Object.keys(results).length > 0 && /*#__PURE__*/_jsxDEV(ScanResults, {\n      results: results,\n      scanOptions: scanOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Scanner, \"nd3ESNAiWlXZ62X/qIrN+kO9V0k=\", false, function () {\n  return [useMutation];\n});\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useState","useMutation","axios","toast","ScanResults","jsxDEV","_jsxDEV","scanOptions","id","name","description","endpoint","Scanner","_s","url","setUrl","selectedScans","setSelectedScans","results","setResults","scanMutation","mutationFn","response","post","website","data","onSuccess","variables","prev","success","onError","error","_error$response","_error$response$data","handleScan","length","forEach","scanId","scan","find","s","mutate","toggleScan","includes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","placeholder","map","onClick","disabled","isPending","Object","keys","_c","$RefreshReg$"],"sources":["C:/Users/mani5/OneDrive/Desktop/WebSecScan/Frontend_contri/src/components/Scanner.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport ScanResults from './ScanResults';\r\n\r\ninterface ScanOption {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  endpoint: string;\r\n}\r\n\r\nconst scanOptions: ScanOption[] = [\r\n  {\r\n    id: 'basic',\r\n    name: 'Basic Scan',\r\n    description: 'Gather general information about the website',\r\n    endpoint: '/basicscan',\r\n  },\r\n  {\r\n    id: 'sql',\r\n    name: 'SQL Injection Scan',\r\n    description: 'Check for SQL injection vulnerabilities',\r\n    endpoint: '/sqlscan',\r\n  },\r\n  {\r\n    id: 'password',\r\n    name: 'Weak Password Check',\r\n    description: 'Test for common weak passwords',\r\n    endpoint: '/password',\r\n  },\r\n  {\r\n    id: 'stress',\r\n    name: 'Website Stress Test',\r\n    description: 'Test website resilience under load',\r\n    endpoint: '/webstresser',\r\n  },\r\n  {\r\n    id: 'xss',\r\n    name: 'XSS Vulnerability Check',\r\n    description: 'Check for Cross-Site Scripting vulnerabilities',\r\n    endpoint: '/xss',\r\n  },\r\n  {\r\n    id: 'deface',\r\n    name: 'Deface Vulnerability Check',\r\n    description: 'Check for potential defacement vulnerabilities',\r\n    endpoint: '/deface',\r\n  },\r\n  {\r\n    id: 'dns',\r\n    name: 'DNS Records Check',\r\n    description: 'Analyze DNS records and configurations',\r\n    endpoint: '/dnsrecord',\r\n  },\r\n  {\r\n    id: 'full',\r\n    name: 'Full Comprehensive Scan',\r\n    description: 'Run all security checks',\r\n    endpoint: '/scanner/fullscan',\r\n  },\r\n];\r\n\r\nconst Scanner: React.FC = () => {\r\n  const [url, setUrl] = useState('');\r\n  const [selectedScans, setSelectedScans] = useState<string[]>([]);\r\n  const [results, setResults] = useState<Record<string, any>>({});\r\n\r\n  const scanMutation = useMutation({\r\n    mutationFn: async ({ url, endpoint }: { url: string; endpoint: string }) => {\r\n      const response = await axios.post(`http://localhost:10037${endpoint}`, {\r\n        website: url,\r\n      });\r\n      return response.data;\r\n    },\r\n    onSuccess: (data, variables) => {\r\n      setResults((prev) => ({\r\n        ...prev,\r\n        [variables.endpoint]: data,\r\n      }));\r\n      toast.success('Scan completed successfully!');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || 'Scan failed');\r\n    },\r\n  });\r\n\r\n  const handleScan = async () => {\r\n    if (!url) {\r\n      toast.error('Please enter a URL');\r\n      return;\r\n    }\r\n\r\n    if (selectedScans.length === 0) {\r\n      toast.error('Please select at least one scan type');\r\n      return;\r\n    }\r\n\r\n    setResults({});\r\n    selectedScans.forEach((scanId) => {\r\n      const scan = scanOptions.find((s) => s.id === scanId);\r\n      if (scan) {\r\n        scanMutation.mutate({ url, endpoint: scan.endpoint });\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleScan = (scanId: string) => {\r\n    setSelectedScans((prev) =>\r\n      prev.includes(scanId)\r\n        ? prev.filter((id) => id !== scanId)\r\n        : [...prev, scanId]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n          Website Security Scanner\r\n        </h2>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label\r\n              htmlFor=\"url\"\r\n              className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n            >\r\n              Website URL\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              id=\"url\"\r\n              value={url}\r\n              onChange={(e) => setUrl(e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {scanOptions.map((scan) => (\r\n              <div\r\n                key={scan.id}\r\n                className={`p-4 rounded-lg border cursor-pointer transition-colors ${\r\n                  selectedScans.includes(scan.id)\r\n                    ? 'border-primary-500 bg-primary-50 dark:bg-primary-900/20'\r\n                    : 'border-gray-200 dark:border-gray-700 hover:border-primary-300 dark:hover:border-primary-700'\r\n                }`}\r\n                onClick={() => toggleScan(scan.id)}\r\n              >\r\n                <h3 className=\"font-medium text-gray-900 dark:text-white\">\r\n                  {scan.name}\r\n                </h3>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  {scan.description}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleScan}\r\n            disabled={scanMutation.isPending}\r\n            className=\"w-full bg-primary-600 text-white py-2 px-4 rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {scanMutation.isPending ? 'Scanning...' : 'Start Scan'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {Object.keys(results).length > 0 && (\r\n        <ScanResults results={results} scanOptions={scanOptions} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scanner; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,MAAMC,WAAyB,GAAG,CAChC;EACEC,EAAE,EAAE,OAAO;EACXC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE,8CAA8C;EAC3DC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,KAAK;EACTC,IAAI,EAAE,oBAAoB;EAC1BC,WAAW,EAAE,yCAAyC;EACtDC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,qBAAqB;EAC3BC,WAAW,EAAE,gCAAgC;EAC7CC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,QAAQ;EACZC,IAAI,EAAE,qBAAqB;EAC3BC,WAAW,EAAE,oCAAoC;EACjDC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,KAAK;EACTC,IAAI,EAAE,yBAAyB;EAC/BC,WAAW,EAAE,gDAAgD;EAC7DC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,QAAQ;EACZC,IAAI,EAAE,4BAA4B;EAClCC,WAAW,EAAE,gDAAgD;EAC7DC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,KAAK;EACTC,IAAI,EAAE,mBAAmB;EACzBC,WAAW,EAAE,wCAAwC;EACrDC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,MAAM;EACVC,IAAI,EAAE,yBAAyB;EAC/BC,WAAW,EAAE,yBAAyB;EACtCC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAW,EAAE,CAAC;EAChE,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAsB,CAAC,CAAC,CAAC;EAE/D,MAAMoB,YAAY,GAAGnB,WAAW,CAAC;IAC/BoB,UAAU,EAAE,MAAAA,CAAO;MAAEP,GAAG;MAAEH;IAA4C,CAAC,KAAK;MAC1E,MAAMW,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,yBAAyBZ,QAAQ,EAAE,EAAE;QACrEa,OAAO,EAAEV;MACX,CAAC,CAAC;MACF,OAAOQ,QAAQ,CAACG,IAAI;IACtB,CAAC;IACDC,SAAS,EAAEA,CAACD,IAAI,EAAEE,SAAS,KAAK;MAC9BR,UAAU,CAAES,IAAI,KAAM;QACpB,GAAGA,IAAI;QACP,CAACD,SAAS,CAAChB,QAAQ,GAAGc;MACxB,CAAC,CAAC,CAAC;MACHtB,KAAK,CAAC0B,OAAO,CAAC,8BAA8B,CAAC;IAC/C,CAAC;IACDC,OAAO,EAAGC,KAAU,IAAK;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACvB9B,KAAK,CAAC4B,KAAK,CAAC,EAAAC,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,aAAa,CAAC;IAC3D;EACF,CAAC,CAAC;EAEF,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACpB,GAAG,EAAE;MACRX,KAAK,CAAC4B,KAAK,CAAC,oBAAoB,CAAC;MACjC;IACF;IAEA,IAAIf,aAAa,CAACmB,MAAM,KAAK,CAAC,EAAE;MAC9BhC,KAAK,CAAC4B,KAAK,CAAC,sCAAsC,CAAC;MACnD;IACF;IAEAZ,UAAU,CAAC,CAAC,CAAC,CAAC;IACdH,aAAa,CAACoB,OAAO,CAAEC,MAAM,IAAK;MAChC,MAAMC,IAAI,GAAG/B,WAAW,CAACgC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAChC,EAAE,KAAK6B,MAAM,CAAC;MACrD,IAAIC,IAAI,EAAE;QACRlB,YAAY,CAACqB,MAAM,CAAC;UAAE3B,GAAG;UAAEH,QAAQ,EAAE2B,IAAI,CAAC3B;QAAS,CAAC,CAAC;MACvD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAM+B,UAAU,GAAIL,MAAc,IAAK;IACrCpB,gBAAgB,CAAEW,IAAI,IACpBA,IAAI,CAACe,QAAQ,CAACN,MAAM,CAAC,GACjBT,IAAI,CAACgB,MAAM,CAAEpC,EAAE,IAAKA,EAAE,KAAK6B,MAAM,CAAC,GAClC,CAAC,GAAGT,IAAI,EAAES,MAAM,CACtB,CAAC;EACH,CAAC;EAED,oBACE/B,OAAA;IAAKuC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxC,OAAA;MAAKuC,SAAS,EAAC,iDAAiD;MAAAC,QAAA,gBAC9DxC,OAAA;QAAIuC,SAAS,EAAC,0DAA0D;QAAAC,QAAA,EAAC;MAEzE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL5C,OAAA;QAAKuC,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBxC,OAAA;UAAAwC,QAAA,gBACExC,OAAA;YACE6C,OAAO,EAAC,KAAK;YACbN,SAAS,EAAC,4DAA4D;YAAAC,QAAA,EACvE;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR5C,OAAA;YACE8C,IAAI,EAAC,KAAK;YACV5C,EAAE,EAAC,KAAK;YACR6C,KAAK,EAAEvC,GAAI;YACXwC,QAAQ,EAAGC,CAAC,IAAKxC,MAAM,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACxCI,WAAW,EAAC,qBAAqB;YACjCZ,SAAS,EAAC;UAA8J;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5C,OAAA;UAAKuC,SAAS,EAAC,sDAAsD;UAAAC,QAAA,EAClEvC,WAAW,CAACmD,GAAG,CAAEpB,IAAI,iBACpBhC,OAAA;YAEEuC,SAAS,EAAE,0DACT7B,aAAa,CAAC2B,QAAQ,CAACL,IAAI,CAAC9B,EAAE,CAAC,GAC3B,yDAAyD,GACzD,6FAA6F,EAChG;YACHmD,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACJ,IAAI,CAAC9B,EAAE,CAAE;YAAAsC,QAAA,gBAEnCxC,OAAA;cAAIuC,SAAS,EAAC,2CAA2C;cAAAC,QAAA,EACtDR,IAAI,CAAC7B;YAAI;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACL5C,OAAA;cAAGuC,SAAS,EAAC,0CAA0C;cAAAC,QAAA,EACpDR,IAAI,CAAC5B;YAAW;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC;UAAA,GAbCZ,IAAI,CAAC9B,EAAE;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcT,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5C,OAAA;UACEqD,OAAO,EAAEzB,UAAW;UACpB0B,QAAQ,EAAExC,YAAY,CAACyC,SAAU;UACjChB,SAAS,EAAC,uMAAuM;UAAAC,QAAA,EAEhN1B,YAAY,CAACyC,SAAS,GAAG,aAAa,GAAG;QAAY;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELY,MAAM,CAACC,IAAI,CAAC7C,OAAO,CAAC,CAACiB,MAAM,GAAG,CAAC,iBAC9B7B,OAAA,CAACF,WAAW;MAACc,OAAO,EAAEA,OAAQ;MAACX,WAAW,EAAEA;IAAY;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CAhHID,OAAiB;EAAA,QAKAX,WAAW;AAAA;AAAA+D,EAAA,GAL5BpD,OAAiB;AAkHvB,eAAeA,OAAO;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}